p =   plot(data$Time, data$Voltage, type = "l",
ylab = "Voltage", xaxt = "n", xlab = "datetime")
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
p
# plot(data$Time, data$Global_reactive_power, type = "l",
#      ylab = "Global_reactive_power", xaxt = "n", xlab = "datetime")
# # Customize x-axis labels to show the weekdays
# axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
#      labels = c("Thu", "Fri", "Sat"), las = 1)
})
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
p
p
p
p
# plot(data$Time, data$Global_reactive_power, type = "l",
#      ylab = "Global_reactive_power", xaxt = "n", xlab = "datetime")
# # Customize x-axis labels to show the weekdays
# axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
#      labels = c("Thu", "Fri", "Sat"), las = 1)
})
?mfrow
?mfrow
??mfrow
?mfrow
?par
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
# Plot Global Active Power and Weekday
plot(data$Time, data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
plot(data$Time, data$Voltage, type = "l",
ylab = "Voltage", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Plot Global Active Power and Weekday
plot(data$Time, data$Sub_metering_1, type = "l",
ylab = "Energy sub metering", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Add lines for Sub_metering_2 and Sub_metering_3
lines(data$Time, data$Sub_metering_2, col = "red")
lines(data$Time, data$Sub_metering_3, col = "blue")
# Add a legend with colors for each sub-metering
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lty = 1)
plot(data$Time, data$Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
})
# Read in the data
data <- read.table("household_power_consumption.txt",
sep = ";", header = TRUE, na.strings = "?")
# Convert first column to class date
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
# Filter the data to just 2007-02-01 through 2007-02-02
data <- subset(data, Date >= as.Date("2007-02-01") & Date <= as.Date("2007-02-02"))
# Convert Time column to class time using strptime
data$Time <- strptime(paste(data$Date, data$Time), format = "%Y-%m-%d %H:%M:%S")
# Create a new column with the weekday (abbreviated) for each observation
data$Weekday <- weekdays(data$Date, abbreviate = TRUE)
# Start windows graphics device
windows()
# Set up the plotting area to be a 2x2 grid
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 0, 0))
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
# Plot Global Active Power and Weekday
plot(data$Time, data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
plot(data$Time, data$Voltage, type = "l",
ylab = "Voltage", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Plot Global Active Power and Weekday
plot(data$Time, data$Sub_metering_1, type = "l",
ylab = "Energy sub metering", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Add lines for Sub_metering_2 and Sub_metering_3
lines(data$Time, data$Sub_metering_2, col = "red")
lines(data$Time, data$Sub_metering_3, col = "blue")
# Add a legend with colors for each sub-metering
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lty = 1)
plot(data$Time, data$Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
})
par(las)
?axis
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
# Plot Global Active Power and Weekday
plot(data$Time, data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
plot(data$Time, data$Voltage, type = "l",
ylab = "Voltage", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
axis(2, at = seq(234, 246, by = 4), las = 1)
# Plot Global Active Power and Weekday
plot(data$Time, data$Sub_metering_1, type = "l",
ylab = "Energy sub metering", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Add lines for Sub_metering_2 and Sub_metering_3
lines(data$Time, data$Sub_metering_2, col = "red")
lines(data$Time, data$Sub_metering_3, col = "blue")
# Add a legend with colors for each sub-metering
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lty = 1)
plot(data$Time, data$Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
})
dev.off()
# Read in the data
data <- read.table("household_power_consumption.txt",
sep = ";", header = TRUE, na.strings = "?")
# Convert first column to class date
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
# Filter the data to just 2007-02-01 through 2007-02-02
data <- subset(data, Date >= as.Date("2007-02-01") & Date <= as.Date("2007-02-02"))
# Convert Time column to class time using strptime
data$Time <- strptime(paste(data$Date, data$Time), format = "%Y-%m-%d %H:%M:%S")
# Create a new column with the weekday (abbreviated) for each observation
data$Weekday <- weekdays(data$Date, abbreviate = TRUE)
# Start windows graphics device
windows()
# Set up the plotting area to be a 2x2 grid
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 0, 0))
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
# Plot Global Active Power and Weekday
plot(data$Time, data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
plot(data$Time, data$Voltage, type = "l",
ylab = "Voltage", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
axis(2, at = seq(234, 246, by = 4), las = 1)
# Plot Global Active Power and Weekday
plot(data$Time, data$Sub_metering_1, type = "l",
ylab = "Energy sub metering", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Add lines for Sub_metering_2 and Sub_metering_3
lines(data$Time, data$Sub_metering_2, col = "red")
lines(data$Time, data$Sub_metering_3, col = "blue")
# Add a legend with colors for each sub-metering
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lty = 1)
plot(data$Time, data$Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
})
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
# Plot Global Active Power and Weekday
plot(data$Time, data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)",
xaxt = "n", yaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
plot(data$Time, data$Voltage, type = "l",
ylab = "Voltage", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
axis(2, at = seq(234, 246, by = 4), las = 1)
# Plot Global Active Power and Weekday
plot(data$Time, data$Sub_metering_1, type = "l",
ylab = "Energy sub metering", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Add lines for Sub_metering_2 and Sub_metering_3
lines(data$Time, data$Sub_metering_2, col = "red")
lines(data$Time, data$Sub_metering_3, col = "blue")
# Add a legend with colors for each sub-metering
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lty = 1)
plot(data$Time, data$Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
})
dev.off()
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
# Plot Global Active Power and Weekday
plot(data$Time, data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)",
xaxt = "n", yaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
plot(data$Time, data$Voltage, type = "l",
ylab = "Voltage", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
axis(2, at = seq(234, 246, by = 4), las = 1)
# Plot Global Active Power and Weekday
plot(data$Time, data$Sub_metering_1, type = "l",
ylab = "Energy sub metering", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Add lines for Sub_metering_2 and Sub_metering_3
lines(data$Time, data$Sub_metering_2, col = "red")
lines(data$Time, data$Sub_metering_3, col = "blue")
# Add a legend with colors for each sub-metering
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lty = 1)
plot(data$Time, data$Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
})
# Start windows graphics device
windows()
# Set up the plotting area to be a 2x2 grid
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 0, 0))
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
# Plot Global Active Power and Weekday
plot(data$Time, data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)",
xaxt = "n", yaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
plot(data$Time, data$Voltage, type = "l",
ylab = "Voltage", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
axis(2, at = seq(234, 246, by = 4), las = 1)
# Plot Global Active Power and Weekday
plot(data$Time, data$Sub_metering_1, type = "l",
ylab = "Energy sub metering", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Add lines for Sub_metering_2 and Sub_metering_3
lines(data$Time, data$Sub_metering_2, col = "red")
lines(data$Time, data$Sub_metering_3, col = "blue")
# Add a legend with colors for each sub-metering
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lty = 1)
plot(data$Time, data$Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
})
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
# Plot Global Active Power and Weekday
plot(data$Time, data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
plot(data$Time, data$Voltage, type = "l",
ylab = "Voltage", xlab = "datetime", xaxt = "n", yaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
axis(2, at = seq(234, 246, by = 4), las = 1)
# Plot Global Active Power and Weekday
plot(data$Time, data$Sub_metering_1, type = "l",
ylab = "Energy sub metering", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Add lines for Sub_metering_2 and Sub_metering_3
lines(data$Time, data$Sub_metering_2, col = "red")
lines(data$Time, data$Sub_metering_3, col = "blue")
# Add a legend with colors for each sub-metering
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lty = 1)
plot(data$Time, data$Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
})
# The two plots in the first column are the plots that we made in plot2.R and
# plot3.R. We will make the other two plots below and call them p4 and p5
with(data, {
# Plot Global Active Power and Weekday
plot(data$Time, data$Global_active_power, type = "l",
ylab = "Global Active Power", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
plot(data$Time, data$Voltage, type = "l",
ylab = "Voltage", xlab = "datetime", xaxt = "n", yaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
axis(2, at = seq(234, 246, by = 4), las = 1)
# Plot Global Active Power and Weekday
plot(data$Time, data$Sub_metering_1, type = "l",
ylab = "Energy sub metering", xaxt = "n", xlab = "")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
# Add lines for Sub_metering_2 and Sub_metering_3
lines(data$Time, data$Sub_metering_2, col = "red")
lines(data$Time, data$Sub_metering_3, col = "blue")
# Add a legend with colors for each sub-metering
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lty = 1)
plot(data$Time, data$Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", xaxt = "n")
# Customize x-axis labels to show the weekdays
axis(1, at = seq(min(data$Time), max(data$Time) + days(1), by = "1 day"),
labels = c("Thu", "Fri", "Sat"), las = 1)
})
# Save the current plot as a .png file
dev.copy(png, file = "plot4.png", width = 480, height = 480)
# Close graphics device
dev.off()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple
| Data"
xyplot(Ozone~Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month\, data = airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout=c(5,1))
p = xyplot(Ozone~Wind, data = airq)
p = xyplot(Ozone~Wind, data = airquality)
p <- xyplot(Ozone~Wind, data = airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plt2.R")
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch=20, xlab = myxlab, ylab = myylab, main=mymain)
xyplot(price~carat | color*cut, data = diamonds, pch=20, xlab = myxlab, ylab = myylab, main=mymain)
sample(colors())
sample(colors(), 10)
pal = c("red", "blue")
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0, 1, len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
p2(2)
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c(blue, green), alpha = 0.5)
p3 <- colorRampPalette(c("blue", "green"), alpha = 0.5)
p3(5)
rgb(0, .5, .5)
plot(x, y, pch=19, col=rgb(0, .5, .5))
plot(x, y, pch=19, col=rgb(0, .5, .5, ,.3))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette()
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~.)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid()
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_smooth(color = "pink", size = 4, alpha = 1/2)
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(size = 4, alpha = 1/2, aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3, 3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coordinate_cartesian(ylim = c(-3, 3))
g + geom_line() + coord_cartesian(ylim = c(-3, 3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape=cut)
qplot(carat, price, data = diamonds, color=cut)
qplot(carat, price, data = diamonds, color=cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color=cut, aes(geom_smooth(method = "lm")))
qplot(carat, price, data = diamonds, aes(color=cut), geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color=cut)
qplot(carat, price, data = diamonds, color=cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color=cut, facets = .~cut) + geom_smooth(method = "lm")
g <- ggplot(data = diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length=4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut~car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
?splom
?trellis.par.set
